using System;
using System.IO;
using ME3Explorer;
using ME3Explorer.Unreal;
using KFreonLib.Scripting;
using KFreonLib.MEDirectories;
using KFreonLib.Debugging;

namespace SimpleScripts
{
    public class MyScript : IScript
    {
        public string RunScript()
        {
            BasicFunction bf = new BasicFunction();
            int objidx = **m1**;
            string filename = "**m2**";
            string pathexec = bf.getExecPath();
            string pathtarget = Path.GetDirectoryName(ME3Directory.cookedPath);
            
            if (pathtarget.ToLower().Contains("cookedpcconsole"))
                pathtarget = Path.GetDirectoryName(pathtarget);
            
            DebugOutput.PrintLn(pathtarget);
            bf.DebugPrintln("Binary Replacement in " + filename);
            string file = Path.Combine(pathtarget, filename);
            DebugOutput.PrintLn("Targeting: " + file);
            if (!File.Exists(file))
            {
                bf.DebugPrintln("Cant find target pcc!");
                return "";
            }
            PCCObject pcc = new PCCObject(file);
            bool found = true;
            try
            {
                PCCObject.ExportEntry e = pcc.Exports[objidx];
                byte[] temp = KFreonLib.Scripting.ModMaker.ModData;
                pcc.Exports[objidx].Data = temp;
            }
            catch (Exception exc)
            {
                bf.DebugPrintln("Error : " + exc.Message);
                found = false;
            }
            
            if (!found)
            {
                bf.DebugPrintln("Cant find object!");
                return "";
            }
            bf.DebugPrintln("Found!");
            pcc.altSaveToFile(pcc.pccFileName, true);
            bf.DebugPrintln("Done.");
            return "";
        }
    }
}